[{"/home/hab06/Documents/proyect/frontend/src/index.js":"1","/home/hab06/Documents/proyect/frontend/src/App.js":"2","/home/hab06/Documents/proyect/frontend/src/reportWebVitals.js":"3","/home/hab06/Documents/proyect/frontend/src/Header.js":"4","/home/hab06/Documents/proyect/frontend/src/Login.js":"5","/home/hab06/Documents/proyect/frontend/src/UserContext.js":"6","/home/hab06/Documents/proyect/frontend/src/api.js":"7","/home/hab06/Documents/proyect/frontend/src/useFetch.js":"8","/home/hab06/Documents/proyect/frontend/src/Register.js":"9","/home/hab06/Documents/proyect/frontend/src/Footer.js":"10","/home/hab06/Documents/proyect/frontend/src/Profile.js":"11","/home/hab06/Documents/proyect/frontend/src/PlayerProfile.js":"12","/home/hab06/Documents/proyect/frontend/src/Acordeon.js":"13","/home/hab06/Documents/proyect/frontend/src/Filter.js":"14"},{"size":673,"mtime":1609609010157,"results":"15","hashOfConfig":"16"},{"size":5366,"mtime":1611088047118,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1608669387805,"results":"18","hashOfConfig":"16"},{"size":915,"mtime":1611187499835,"results":"19","hashOfConfig":"16"},{"size":1631,"mtime":1611183670984,"results":"20","hashOfConfig":"16"},{"size":703,"mtime":1611001883055,"results":"21","hashOfConfig":"16"},{"size":6162,"mtime":1611190968034,"results":"22","hashOfConfig":"16"},{"size":430,"mtime":1608670494317,"results":"23","hashOfConfig":"16"},{"size":4359,"mtime":1611184352020,"results":"24","hashOfConfig":"16"},{"size":458,"mtime":1611085797633,"results":"25","hashOfConfig":"16"},{"size":15287,"mtime":1611200181503,"results":"26","hashOfConfig":"16"},{"size":6911,"mtime":1611911736384,"results":"27","hashOfConfig":"16"},{"size":750,"mtime":1610725924490,"results":"28","hashOfConfig":"16"},{"size":5466,"mtime":1611200626575,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2a5nrs",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"/home/hab06/Documents/proyect/frontend/src/index.js",[],["65","66"],"/home/hab06/Documents/proyect/frontend/src/App.js",["67","68"],"import './App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport Profile from './Profile';\nimport Filter from './Filter';\nimport PlayerProfile from './PlayerProfile'\n// import { useState, useMemo, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom';\n<link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Raleway\" />\n// import { useUser } from './UserContext';\n// import { useClubsList, useSkillsList, useUsersFilterList, filterByClub, filterBySkill, filterByPosition, filterByAge, playerProfile } from './api';\n\n\nfunction App() {\n\n  // const me = useUser()\n\n  // const ages = [14,15,16,17,18,19,20,21,22,23,24,25]\n  // const positions = ['Portero', 'Defensa', 'Centrocampista', 'Delantero']\n  \n  // const clubs = useClubsList()\n  // const skills = useSkillsList()\n  // const usersSkills = useUsersFilterList()\n  // const location = useLocation()\n  // const filters = useMemo(() => new URLSearchParams(location.search), [location])\n\n  // const [data , setData ] = useState([])\n  // const [showClubs, setShowClubs] = useState(false)\n  // const [showSkills, setShowSkills] = useState(false)\n  // const [showAge, setShowAge] = useState(false)\n  // const [showPosition, setShowPosition] = useState(false)\n\n  // useEffect(() => {\n  //   if (filters.has('club')) {\n\n  //     filterByClub(filters.get('club')).then((datos) => setData(datos))\n  //   }\n  //   if (filters.has('skill')) {\n     \n  //     filterBySkill(filters.get('skill')).then((datos) => setData(datos))\n  //   } \n  //   if (filters.has('age')) {\n     \n  //     filterByAge(filters.get('age')).then((datos) => setData(datos))\n  //   } \n  //   if (filters.has('position')) {\n      \n  //     filterByPosition(filters.get('position')).then((datos) => setData(datos))\n  //   }\n  // }, [filters])\n\n \n\n  return (\n    <div className=\"App\">\n      <header className=\"header\"><Header /></header>\n      <body className=\"body\">\n        <Switch>\n        <Route path=\"/playerProfile\">\n            <PlayerProfile />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Filter />\n            {/* <aside className=\"filter\">\n              <h3>Filtros</h3>\n              <h4 className=\"filter_name\" onClick={() => setShowClubs(!showClubs)}>CLUB\n              {showClubs ? 'Ocultar' : 'Mostrar'}</h4>\n              {showClubs &&\n              <div className=\"filter-data\">\n                 {clubs && clubs.map(club => \n                  <Link to={`/?club=${club.club_name}`} key={club.id}>\n                    <span className=\"filter-results\">{club.club_name}</span>\n                  </Link>\n                )}\n              </div>\n              }  \n              <h4 className=\"filter_name\" onClick={() => setShowSkills(!showSkills)}>HABILIDADES\n              {showSkills ? 'Mostrar menos' : 'Mostrar más'}</h4>\n              {showSkills && \n              <div className=\"filter-data\">\n                {skills && skills.map(skill => \n                      <Link to={`/?skill=${skill.skill}`} key={skill.id}>\n                        <span>{skill.skill}</span>\n                      </Link>\n                  )}\n              </div>\n              } \n              <h4 className=\"filter_name\" onClick={() => setShowAge(!showAge)}>EDAD\n              {showAge ? 'Mostrar menos' : 'Mostrar más'}</h4>\n              {showAge &&\n              <div className=\"filter-data\">\n                {ages && ages.map(age => \n                    <Link to={`/?age=${age}`} key={age}>\n                      <span>{age}</span>\n                    </Link>\n                )}\n              </div>\n              }\n              <h4 className=\"filter_name\" onClick={() => setShowPosition(!showPosition)}>POSICION\n              {showPosition ? 'Mostrar menos' : 'Mostrar más'}</h4>\n              {showPosition &&\n              <div className=\"filter-data\">\n                {positions && positions.map(position => \n                    <Link to={`/?position=${position}`} key={position}>\n                      <span>{position}</span>\n                    </Link>\n                )}\n              </div>\n              }\n              </aside>\n              <div className=\"welcome\">\n                {data?.length > 0 ? \n                  (data.map(player => (<Link to={`/playerProfile?id=${player.id}`} key={player.id}>\n                    <div className=\"filter-player\">\n                      <span>{player.name}</span>\n                      <div className=\"photo-filter\" style={{ backgroundImage: 'url(' + player.perfil_photo + ')' }}></div>\n                      <span>{player.country}</span>\n                    </div></Link>))):(<span className=\"welcome-body\">Bienvenidos</span>)\n                }\n              </div> */}\n          </Route>\n        </Switch>\n      </body>\n      <footer className=\"footer\"><Footer /></footer>\n    </div>\n  );\n}\n\nexport default App;\n\n{/* <div className=\"photo\" style={style} value={preview} onClick={handleClick}></div> */}\n{/* <input className=\"hide\" name=\"image\" type=\"file\" accept=\"image/*\" onChange={handlePicture} ref={theInput}></input> */}\n","/home/hab06/Documents/proyect/frontend/src/reportWebVitals.js",[],"/home/hab06/Documents/proyect/frontend/src/Header.js",[],"/home/hab06/Documents/proyect/frontend/src/Login.js",[],"/home/hab06/Documents/proyect/frontend/src/UserContext.js",[],"/home/hab06/Documents/proyect/frontend/src/api.js",["69","70","71"],"import useFetch from './useFetch'\n\nexport const useUserList = () => useFetch('http://localhost:8080/api/users')\nexport const useClubsList = () => useFetch('http://localhost:8080/api/clubs')\nexport const useSkillsList = () => useFetch('http://localhost:8080/api/skills')\nexport const useCountriesList = () => useFetch('http://localhost:8080/api/countries')\nexport const useUsersFilterList = (position) => useFetch('http://localhost:8080/api/players/filterByPosition')\n\nexport const login = async (email, password) => {\n    const ret = await fetch('http://localhost:8080/api/users/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password})\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const register = async (name, last_name, nif, email, birthdate, password, repeatedPassword, rol, country) => {\n    const ret = await fetch('http://localhost:8080/api/users/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', },\n        body: JSON.stringify({ name, last_name, nif, email, birthdate, password, repeatedPassword, rol, country})\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const updateTecnicalData = async (token, height, dominant_leg, main_position, secundary_position, property_of, actual_team) => {\n    const ret = await fetch('http://localhost:8080/api/player/update', {\n        method: 'PUT',\n        headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json'},\n        body: JSON.stringify({ token, height, dominant_leg, main_position, secundary_position, property_of, actual_team })\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const updateAgency = async (token, agency) => {\n    const ret = await fetch('http://localhost:8080/api/manager/update', {\n        method: 'PUT',\n        headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json'},\n        body: JSON.stringify({ token, agency })\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const insertSkills = async (token, skill) => {\n    const ret = await fetch('http://localhost:8080/api/player/insertskill', {\n        method: 'POST',\n        headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json'},\n        body: JSON.stringify({ token, skill })\n    })\n}\n\nexport const uploadVideo = async (token, content) => {\n    const ret = await fetch('http://localhost:8080/api/videos/upload', {\n        method: 'PUT',\n        headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json'},\n        body: JSON.stringify({ token, content })\n    })\n}\n\nexport const deleteUser = async (token) => {\n    const ret = await fetch('http://localhost:8080/api/users/delete', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json'},\n        body: JSON.stringify({ token })\n    })\n}\n\n\nexport const meTecnicalData = async (token, id)  => {\n\n    const ret = await fetch('http://localhost:8080/api/player/tecnicalData', {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const meAgency = async (token, id)  => {\n\n    const ret = await fetch('http://localhost:8080/api/manager/agency', {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const playerData = async (token, id)  => {\n\n    const ret = await fetch('http://localhost:8080/api/users/playerProfile', {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const mePersonalData = async (token, phone, perfil_photo)  => {\n\n    const fd = new FormData()\n    fd.append('phone', phone)\n    fd.append('image', perfil_photo)\n    \n\n    const ret = await fetch('http://localhost:8080/api/user/update', {\n        method: 'PUT',\n        headers: { 'Authorization': 'Bearer ' + token},\n        body: fd\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const meVideos = async (token) => {\n    const ret = await fetch('http://localhost:8080/api/multimedia/meVideos', {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const meSkills = async (token) => {\n    const ret = await fetch('http://localhost:8080/api/player/meSkills', {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n    })\n    const data = await ret.json()\n    return data\n}\n\nexport const filterByClub = async (club) => {\n    const ret = await fetch('http://localhost:8080/api/players/filterByClub?'  + new URLSearchParams({\n        club,\n    })) \n    const data = await ret.json()\n    return data\n}\n\nexport const filterBySkill = async (skill) => {\n    const ret = await fetch('http://localhost:8080/api/players/filterBySkill?'  + new URLSearchParams({\n        skill,\n    })) \n    const data = await ret.json()\n    return data\n}\n\nexport const filterByPosition = async (position) => {\n    const ret = await fetch('http://localhost:8080/api/players/filterByPosition?'  + new URLSearchParams({\n        position,\n    })) \n    const data = await ret.json()\n    return data\n}\n\nexport const filterByAge = async (age) => {\n    const ret = await fetch('http://localhost:8080/api/players/filterByAge?'  + new URLSearchParams({\n        age,\n    })) \n    const data = await ret.json()\n    return data\n}\n\nexport const playerProfile = async (id) => {\n    const ret = await fetch('http://localhost:8080/api/users/playerProfile?'  + new URLSearchParams({\n        id,\n    })) \n    const data = await ret.json()\n    return data\n}\n\nexport const contract = async (token, id_player) => {\n    const ret = await fetch('http://localhost:8080/api/manager/contract', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', },\n        body: JSON.stringify({ token, id_player})\n    })\n    const data = await ret.json()\n    return data\n}\n\n","/home/hab06/Documents/proyect/frontend/src/useFetch.js",[],"/home/hab06/Documents/proyect/frontend/src/Register.js",[],"/home/hab06/Documents/proyect/frontend/src/Footer.js",[],"/home/hab06/Documents/proyect/frontend/src/Profile.js",["72","73","74","75","76","77","78","79","80","81"],"import { useState, useEffect, Fragment, useCallback, useRef } from 'react';\nimport { useSetUser, useUser } from './UserContext';\nimport './Profile.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport { mePersonalData, meVideos, meTecnicalData, meAgency, updateTecnicalData, updateAgency, useClubsList, insertSkills, useSkillsList, meSkills, uploadVideo, deleteUser } from './api';\n\nimport { act } from 'react-dom/test-utils';\n\n\nfunction Profile() {\n\n    const { user: me, token } = useUser();\n    const theInput = useRef();\n    console.log(me);\n    const setMe = useSetUser()\n    const history = useHistory()\n\n    const clubs = useClubsList()\n    const skills = useSkillsList()\n    const mainPositions = ['Portero','Lateral derecho','Defensa central','Lateral izquierdo',\n    'Centrocampista defensivo','Medio izquierdo','Medio derecho','Centrocampista ofensivo',\n    'Extremo izquierdo','Extremo derecho','Segundo delantero','Delantero centro']\n\n    const [videos, setVideos ] = useState([])\n    const [playerSkills, setPlayerSkills] = useState([])\n    const [data, setData ] = useState({})\n    const [preview, setPreview ] = useState(me.perfil_photo)\n\n    const [ phone, setPhone ] = useState(me.phone || \"\")\n\n    const [ birthdate, setBirthdate ] = useState(() => {\n        const fecha = new Date(me.birthdate)\n        if (fecha) {\n            return `${fecha.getUTCDate()}/${fecha.getUTCMonth()+1}/${fecha.getUTCFullYear()}`;\n        }\n        return me.birthdate;\n    })\n\n\n\n    const [ height, setHeight ] = useState(data.height || \"\")\n    const [ dominantLeg, setDominantLeg ] = useState(data.dominant_leg || \"\")\n    const [ mainPosition, setMainPosition ] = useState(data.main_position || \"\")\n    const [ secundaryPosition, setSecundaryPosition ] = useState(data.secundary_position || \"\")\n    const [ propertyOf, setPropertyOf ] = useState(data.property_of || \"\")\n    const [ actualTeam, setActualTeam ] = useState(data.actual_team || \"\")\n    const [ skill, setSkill] = useState(data.skill);\n    const [ content, setContent] = useState(data.content);\n\n    const [ agency, setAgency ] = useState(data.agency || \"\")\n\n    const handleTecnicalData = useCallback((e) => {\n        e.preventDefault()\n        \n        updateTecnicalData(token, height, dominantLeg, mainPosition, secundaryPosition, propertyOf, actualTeam)\n    },[height,dominantLeg,mainPosition,secundaryPosition,propertyOf,actualTeam])\n\n    const handleAgency = useCallback((e) => {\n        e.preventDefault()\n        \n        updateAgency(token, agency)\n    },[agency])\n\n    const handleClick = e => {\n        theInput.current.click()\n    }\n    \n    const handlePicture = e => {\n        const reader = new FileReader()\n        reader.onloadend = () => setPreview(reader.result)\n        reader.readAsDataURL(e.target.files[0])\n    }\n    \n    const handleSubmit = async e => {\n        e.preventDefault()\n        const image = e.target.image.files[0];\n        const data = await mePersonalData(token, phone, image )\n        if (data) {\n            return setMe({token, user:data})\n        }\n    }\n    \n    const handleSkills = useCallback((e) => {\n        e.preventDefault()\n\n        insertSkills(token, skill)\n        meSkills(token).then((skills) => setPlayerSkills(skills))\n    },[skill])\n\n\n    const handleVideos = useCallback((e) => {\n        e.preventDefault()\n\n        uploadVideo(token, content)\n        meVideos(token).then((multimedia) => setVideos(multimedia))\n    },[content])\n\n    const deleteMe = useCallback(() => {\n        deleteUser(token);\n        setMe();\n        history.push('/');\n\n    }, [deleteUser, token, setMe, history]);\n\n\n    useEffect(() => {\n          meVideos(token).then((multimedia) => setVideos(multimedia))\n\n          meSkills(token).then((skills) => setPlayerSkills(skills))\n\n          if(me.rol === 'player'){\n            meTecnicalData(token, me.id).then((tecnicalData) => setData(tecnicalData))\n            \n          }\n          if(me.rol === 'manager'){\n            meAgency(token, me.id).then((agencyData) => setData(agencyData))\n            \n          }\n          \n      }, [])\n\n    useEffect(() => {\n        setHeight(data.height)\n        setDominantLeg(data.dominant_leg)\n        setMainPosition(data.main_position)\n        setSecundaryPosition(data.secundary_position)\n        setPropertyOf(data.property_of)\n        setActualTeam(data.actual_team)\n        setAgency(data.agency)\n    }, [data])\n\n\n    const style = preview && {backgroundImage: 'url(' + preview + ')'}\n    \n\n\n    return (\n        \n        <div className=\"profile\">\n            <Link to=\"/\" className=\"inicio\">Inicio</Link>\n            <span className=\"myProfile\">Mi Perfil</span>\n            <form onSubmit={handleSubmit} className=\"form-profile\">\n                <div className=\"profile-data\">\n                    <div className=\"value\">\n                        <div className=\"photo\" style={style} value={preview} onClick={handleClick}></div>\n                        <input className=\"hide\" name=\"image\" type=\"file\" accept=\"image/*\" onChange={handlePicture} ref={theInput}></input>\n                    </div>\n                    <div className=\"profile-data-container\">\n                        <div className=\"personal-data\">\n                            <span className=\"personal-data-title\">DATOS PERSONALES:</span>\n                            <div className=\"personal-data-container\">\n                                <label className=\"label-personal-data\">Nombre:\n                                    <span className=\"span-player-personal-data\">{me.name}</span>\n                                </label>\n                                <label className=\"label-personal-data\">Apellidos:\n                                    <span className=\"span-player-personal-data\">{me.last_name}</span>\n                                </label>\n                                <label className=\"label-personal-data\">NIF:\n                                    <span className=\"span-player-personal-data\">{me.nif}</span>\n                                </label>\n                                <label className=\"label-personal-data\">Fecha de Nacimiento:\n                                    <span className=\"span-player-personal-data\">{birthdate}</span>\n                                </label>\n                                <label className=\"label-personal-data\">Edad:\n                                    <span className=\"span-player-personal-data\">{me.age}</span>\n                                </label>\n                                <label className=\"label-personal-data\">País:\n                                    <span className=\"span-player-personal-data\">{me.country}</span>\n                                </label>\n                            </div>\n                        </div>\n                        <div className=\"contact-data\">\n                            <span className=\"personal-data-title\">DATOS CONTACTO:</span>\n                            <div className=\"contact-data-container\">\n                                <label className=\"label-personal-data\">Email:\n                                    <span className=\"span-player-personal-data\">{me.email}</span>\n                                </label>\n                                <label className=\"label-personal-data\">Teléfono:\n                                    <input value={phone} onChange={e => setPhone(e.target.value)}></input>\n                                </label>\n                            </div>\n                        </div>\n                        <button className=\"personal-data-button\">ACTUALIZAR FICHA</button>\n                    </div>\n                </div>\n            </form>\n            {me.rol==='player' ? (\n            <Fragment>\n                <div className=\"tecnical-data\">\n                    <div className=\"ficha-tecnica\">\n                        <span className=\"personal-data-title\">FICHA TÉCNICA</span>\n                        <form className=\"form-tecnical-data\" onSubmit={handleTecnicalData}>\n                            <span className=\"span-personal-data\">Altura:</span>\n                            <div>\n                                <input value={height} onChange={e => setHeight(e.target.value)} className=\"input-tecnical-data\"></input>\n                                <span className=\"text-personal-data\"> cm</span>\n                            </div>\n                            <span className=\"span-personal-data\">Pierna dominante:</span>\n                            <input value={dominantLeg} onChange={e => setDominantLeg(e.target.value)} className=\"input-tecnical-data\"></input>\n                            <span className=\"span-personal-data\">Posición principal:</span> \n                                {/* <input value={mainPosition} onChange={e => setMainPosition(e.target.value)}></input> */}\n                                <select className=\"countries-list\" name=\"main-position\" value={mainPosition} onChange={e => setMainPosition(e.target.value)}>\n                                {mainPositions && mainPositions.map(position => \n                                    <option key={position.id} value={position}>\n                                        {position}\n                                    </option>\n                                )}\n                                </select>\n                                \n                            <span className=\"span-personal-data\">Posición secundaria:</span>\n                                {/* <input value={secundaryPosition} onChange={e => setSecundaryPosition(e.target.value)}></input> */}\n                                <select className=\"countries-list\" name=\"secundary-position\" value={secundaryPosition} onChange={e => setSecundaryPosition(e.target.value)}>\n                                {mainPositions && mainPositions.map(position => \n                                    <option key={position.id} value={position}>\n                                        {position}\n                                    </option>\n                                )}\n                                </select>\n                            <span className=\"span-personal-data\">Propiedad de:</span>\n                                <select className=\"countries-list\" name=\"club\" value={propertyOf} onChange={e => setPropertyOf(e.target.value)}>\n                                {clubs && clubs.map(club => \n                                    <option key={club.id} value={club.id}>\n                                        {club.club_name}\n                                    </option>\n                                )}\n                                </select>  \n                            <span className=\"span-personal-data\">Equipo actual:</span>\n                                <select className=\"countries-list\" name=\"club\" value={actualTeam} onChange={e => setActualTeam(e.target.value)}>\n                                {clubs && clubs.map(club => \n                                    <option key={club.id} value={club.id}>\n                                        {club.club_name}\n                                    </option>\n                                )}\n                                </select>\n                            <button className=\"tecnical-data-button\" type=\"submit\">ACTUALIZAR DATOS TÉCNICOS</button>\n                        </form>\n                \n                    </div>\n                    <div className=\"skills\">\n                        <span className=\"personal-data-title\">HABILIDADES</span>\n                        {playerSkills && playerSkills.map((playerSkill)=> \n                                <span className=\"text-personal-data\" key={playerSkill.id}>{playerSkill.skill}</span>   \n                        )}\n                        <form onSubmit={handleSkills} className=\"form-tecnical-data\">\n                            <span className=\"insert-skill\">NUEVA HABILIDAD:</span>\n                                <select className=\"countries-list\" name=\"skill\" value={skill} onChange={e => setSkill(e.target.value)}>\n                                    {skills && skills.map(skill =>{\n                                        if(playerSkills.filter((playerSkill)=> playerSkill.id === skill.id).length === 0){\n                                            return (\n                                                <option key={skill.id} value={skill.skill}>\n                                                    {skill.skill}\n                                                </option>\n                                            )\n                                        } \n                                    })}       \n                                </select>            \n                            <button className=\"insert-skill-button\" type=\"submit\">INSERTAR HABILIDAD</button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"videos\">\n                    <span className=\"videos-tittle\">VÍDEOS</span>\n                    <div className=\"video\">\n                        {videos && videos.map((video)=> \n                                <div className=\"videos-url\" key={video.id}>\n                                <iframe width=\"560\" height=\"315\" src={video.content.replace(\"watch?v=\", \"embed/\")} allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n                                </div>\n                        )}\n                    </div>\n                    <form onSubmit={handleVideos}>\n                        <label className=\"upload-video\">Link de Youtube:\n                            <input  className=\"input-video\" value={content} onChange={e => setContent(e.target.value)}></input>\n                        </label>\n                        <button className=\"upload-video-button\" type=\"submit\">PUBLICAR VÍDEO</button>\n                    </form>\n                </div>\n            </Fragment>\n           \n            ): (\n                <Fragment>\n                    <div className=\"agency\">\n                        <span className=\"personal-data-title\">AGENCIA:</span>\n                        <form onSubmit={handleAgency} className=\"form-tecnical-data\">\n                            <label>Nombre:\n                                <input value={agency} onChange={e => setAgency(e.target.value)}></input>\n                            </label>  \n                            <button className=\"insert-skill-button\" type=\"submit\">ACTUALIZAR</button>\n                        </form>\n                    </div>\n                    {/* <div className=\"agency\">Agencia\n                        <form onSubmit={handleAgency}>\n                            <label>Nombre:\n                                <input value={agency} onChange={e => setAgency(e.target.value)}></input>\n                            </label>\n                            <button className=\"agency-button\" type=\"submit\">Actualizar</button>\n                        </form>\n                    </div>  */}\n                </Fragment>\n            )}\n            <div className=\"delete\">\n                <button className=\"delete-acount-button\" onClick={deleteMe}>ELIMINAR CUENTA</button>\n            </div> \n            <div className=\"welcome-image\"></div>\n        </div>\n    );\n}\n\n\nexport default Profile;\n","/home/hab06/Documents/proyect/frontend/src/PlayerProfile.js",["82","83","84","85","86","87"],"/home/hab06/Documents/proyect/frontend/src/Acordeon.js",["88"],"import { useState } from 'react';\n\nfunction Acordeon({ children }) {\n  const [show, setShow] = useState(false)\n\n  return (\n    <div className=\"acordeon\">\n      <button onClick={() => setShow(!show)}>\n        {show ? 'Mostrar menos' : 'Mostrar más'}\n      </button>\n      {show &&\n        <div className=\"acordeon-results\">\n          {children}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default Acordeon;\n\n{/* <h4 className=\"filter_name\">CLUB</h4>\n              <Acordeon>\n                {clubs && clubs.map(club => \n                  <Link to={`/?club=${club.club_name}`} key={club.id}>\n                    <span className=\"filter-results\">{club.club_name}</span>\n                  </Link>\n                )}\n                </Acordeon> */}\n",["89","90"],"/home/hab06/Documents/proyect/frontend/src/Filter.js",["91","92"],"import { useClubsList, useSkillsList, useUsersFilterList, filterByClub, filterBySkill, filterByPosition, filterByAge } from './api';\nimport { useState, useMemo, useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport { useUser } from './UserContext';\nimport './Filter.css';\n\nfunction Filter() {\n\n  const me = useUser()\n\n  const ages = [17,18,19,20,21,22,23,24]\n  const positions = ['Portero', 'Defensa', 'Centrocampista', 'Delantero']\n  \n  const clubs = useClubsList()\n  const skills = useSkillsList()\n  const usersSkills = useUsersFilterList()\n  const location = useLocation()\n  const filters = useMemo(() => new URLSearchParams(location.search), [location])\n\n  const [data , setData ] = useState([])\n  const [showClubs, setShowClubs] = useState(false)\n  const [showSkills, setShowSkills] = useState(false)\n  const [showAge, setShowAge] = useState(false)\n  const [showPosition, setShowPosition] = useState(false)\n\n  useEffect(() => {\n    if (filters.has('club')) {\n\n      // console.log(filters.get('club'))\n      filterByClub(filters.get('club')).then((datos) => setData(datos))\n    }\n    if (filters.has('skill')) {\n      console.log(filters.get('skill'))\n      filterBySkill(filters.get('skill')).then((datos) => setData(datos))\n    } \n    if (filters.has('age')) {\n      console.log(filters.get('age'))\n      filterByAge(filters.get('age')).then((datos) => setData(datos))\n    } \n    if (filters.has('position')) {\n      console.log(filters.get('position'))\n      filterByPosition(filters.get('position')).then((datos) => setData(datos))\n    }\n  }, [filters])\n\n    return (\n        <div className=\"filter\">\n            <aside className=\"filter-aside\">\n              <span className=\"filter-title\">Filtros:</span>\n              <div className=\"filter-name\">\n                <span className=\"filter-name-title\" onClick={() => setShowClubs(!showClubs)}>CLUB</span>\n                <span className=\"filter-name-icon\">{showClubs ? '↑' : '↓'}</span>\n              </div>\n              {showClubs &&\n              <div className=\"filter-data\">\n                 {clubs && clubs.map(club => \n                  <Link to={`/?club=${club.club_name}`} key={club.id}>\n                    <span className=\"filter-results\">{club.club_name}</span>\n                  </Link>\n                )}\n              </div>\n              }\n              <div className=\"filter-name\">\n                <span className=\"filter-name-title\" onClick={() => setShowSkills(!showSkills)}>HABILIDADES</span>\n                <span className=\"filter-name-icon\">{showSkills ? '↑' : '↓'}</span>\n              </div>  \n              {showSkills && \n              <div className=\"filter-data\">\n                {skills && skills.map(skill => \n                      <Link to={`/?skill=${skill.skill}`} key={skill.id}>\n                        <span className=\"filter-results\">{skill.skill}</span>\n                      </Link>\n                  )}\n              </div>\n              }\n              <div className=\"filter-name\">\n                <span className=\"filter-name-title\" onClick={() => setShowAge(!showAge)}>EDAD</span>\n                <span className=\"filter-name-icon\">{showAge ? '↑' : '↓'}</span>\n              </div> \n              {showAge &&\n              <div className=\"filter-data\">\n                {ages && ages.map(age => \n                    <Link to={`/?age=${age}`} key={age}>\n                      <span className=\"filter-results\">{age}</span>\n                    </Link>\n                )}\n              </div>\n              }\n              <div className=\"filter-name\">\n                <span className=\"filter-name-title\" onClick={() => setShowPosition(!showPosition)}>POSICIÓN</span>\n                <span className=\"filter-name-icon\">{showPosition ? '↑' : '↓'}</span>\n              </div>\n              {showPosition &&\n              <div className=\"filter-data\">\n                {positions && positions.map(position => \n                    <Link to={`/?position=${position}`} key={position}>\n                      <span className=\"filter-results\">{position}</span>\n                    </Link>\n                )}\n              </div>\n              }\n              </aside>\n              <div className=\"welcome\">\n                {data?.length > 0 ? \n                  (<div className=\"filter-results-player\">\n                    {data.map(player => (\n                      <Link to={`/playerProfile?id=${player.id}`} key={player.id}>\n                        <div className=\"filter-player\">\n                          <div className=\"photo-filter\" style={{ backgroundImage: 'url(' + player.perfil_photo + ')' }}></div>\n                          <div className=\"filter-player-data\">\n                            <span>{player.name}</span>\n                            <span>{player.age} años</span>\n                            <span>{player.country}</span>\n                          </div>\n                        </div>\n                      </Link>\n                    ))}\n                  </div>) \n                :\n                  (<div className=\"welcome-body\">\n                    <span className=\"welcome-title\">¡Bienvenidx!</span>\n                    <span className=\"welcome-description\">Regístrate y conviértete en la próxima estrella mundial</span>\n                  </div>)\n                }\n                  <div className=\"welcome-image\"></div>\n              </div>\n        </div>\n    )\n\n}\n\nexport default Filter;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":142,"column":1,"nodeType":"99","messageId":"100","endLine":142,"endColumn":90},{"ruleId":"97","severity":1,"message":"98","line":143,"column":1,"nodeType":"99","messageId":"100","endLine":143,"endColumn":123},{"ruleId":"101","severity":1,"message":"102","line":50,"column":11,"nodeType":"103","messageId":"104","endLine":50,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":58,"column":11,"nodeType":"103","messageId":"104","endLine":58,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":66,"column":11,"nodeType":"103","messageId":"104","endLine":66,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":13},{"ruleId":"101","severity":1,"message":"106","line":31,"column":24,"nodeType":"103","messageId":"104","endLine":31,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":56,"column":7,"nodeType":"109","endLine":56,"endColumn":80,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"108","line":62,"column":7,"nodeType":"109","endLine":62,"endColumn":15,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":88,"column":7,"nodeType":"109","endLine":88,"endColumn":14,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"108","line":96,"column":7,"nodeType":"109","endLine":96,"endColumn":16,"suggestions":"113"},{"ruleId":"107","severity":1,"message":"114","line":103,"column":8,"nodeType":"109","endLine":103,"endColumn":43,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"116","line":120,"column":10,"nodeType":"109","endLine":120,"endColumn":12,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":247,"column":65,"nodeType":"120","messageId":"121","endLine":247,"endColumn":67},{"ruleId":"122","severity":1,"message":"123","line":266,"column":33,"nodeType":"124","endLine":266,"endColumn":213},{"ruleId":"101","severity":1,"message":"125","line":1,"column":31,"nodeType":"103","messageId":"104","endLine":1,"endColumn":39},{"ruleId":"101","severity":1,"message":"126","line":1,"column":41,"nodeType":"103","messageId":"104","endLine":1,"endColumn":52},{"ruleId":"101","severity":1,"message":"127","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":20},{"ruleId":"101","severity":1,"message":"128","line":3,"column":22,"nodeType":"103","messageId":"104","endLine":3,"endColumn":29},{"ruleId":"101","severity":1,"message":"129","line":5,"column":25,"nodeType":"103","messageId":"104","endLine":5,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":124,"column":33,"nodeType":"124","endLine":124,"endColumn":205},{"ruleId":"97","severity":1,"message":"98","line":22,"column":1,"nodeType":"99","messageId":"100","endLine":29,"endColumn":32},{"ruleId":"93","replacedBy":"130"},{"ruleId":"95","replacedBy":"131"},{"ruleId":"101","severity":1,"message":"132","line":9,"column":9,"nodeType":"103","messageId":"104","endLine":9,"endColumn":11},{"ruleId":"101","severity":1,"message":"133","line":16,"column":9,"nodeType":"103","messageId":"104","endLine":16,"endColumn":20},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'ret' is assigned a value but never used.","Identifier","unusedVar","'act' is defined but never used.","'setBirthdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["136"],["137"],["138"],["139"],"React Hook useCallback has an unnecessary dependency: 'deleteUser'. Either exclude it or remove the dependency array. Outer scope values like 'deleteUser' aren't valid dependencies because mutating them doesn't re-render the component.",["140"],"React Hook useEffect has missing dependencies: 'me.id', 'me.rol', and 'token'. Either include them or remove the dependency array.",["141"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Fragment' is defined but never used.","'useCallback' is defined but never used.","'useSetUser' is defined but never used.","'useUser' is defined but never used.","'contract' is defined but never used.",["134"],["135"],"'me' is assigned a value but never used.","'usersSkills' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [token, height, dominantLeg, mainPosition, secundaryPosition, propertyOf, actualTeam]",{"range":"154","text":"155"},"Update the dependencies array to be: [agency, token]",{"range":"156","text":"157"},"Update the dependencies array to be: [skill, token]",{"range":"158","text":"159"},"Update the dependencies array to be: [content, token]",{"range":"160","text":"161"},"Update the dependencies array to be: [token, setMe, history]",{"range":"162","text":"163"},"Update the dependencies array to be: [me.id, me.rol, token]",{"range":"164","text":"165"},[2341,2414],"[token, height, dominantLeg, mainPosition, secundaryPosition, propertyOf, actualTeam]",[2541,2549],"[agency, token]",[3261,3268],"[skill, token]",[3456,3465],"[content, token]",[3588,3623],"[token, setMe, history]",[4095,4097],"[me.id, me.rol, token]"]